/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  containsBytes,
  fixEncoderSize,
  getBytesEncoder,
  type Address,
  type ReadonlyUint8Array,
} from '@solana/kit';
import {
  type ParsedAddLiquidityInstruction,
  type ParsedCreatePairInstruction,
  type ParsedInitializePlatformInstruction,
  type ParsedPausePlatformInstruction,
  type ParsedRemoveLiquidityInstruction,
  type ParsedResumePlaformInstruction,
  type ParsedSwapInstruction,
  type ParsedUpdateFeeRateInstruction,
  type ParsedWithdrawPlatformFeesInstruction,
} from '../instructions';

export const MOJO_CONTRACT_PROGRAM_ADDRESS =
  'AMGoaF1FYy6qijdYnLwqQmpxe7eQTVwAy2SvTQbHQcER' as Address<'AMGoaF1FYy6qijdYnLwqQmpxe7eQTVwAy2SvTQbHQcER'>;

export enum MojoContractAccount {
  Pair,
  PlatformState,
}

export function identifyMojoContractAccount(
  account: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): MojoContractAccount {
  const data = 'data' in account ? account.data : account;
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([85, 72, 49, 176, 182, 228, 141, 82])
      ),
      0
    )
  ) {
    return MojoContractAccount.Pair;
  }
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([160, 10, 182, 134, 98, 122, 78, 239])
      ),
      0
    )
  ) {
    return MojoContractAccount.PlatformState;
  }
  throw new Error(
    'The provided account could not be identified as a mojoContract account.'
  );
}

export enum MojoContractInstruction {
  AddLiquidity,
  CreatePair,
  InitializePlatform,
  PausePlatform,
  RemoveLiquidity,
  ResumePlaform,
  Swap,
  UpdateFeeRate,
  WithdrawPlatformFees,
}

export function identifyMojoContractInstruction(
  instruction: { data: ReadonlyUint8Array } | ReadonlyUint8Array
): MojoContractInstruction {
  const data = 'data' in instruction ? instruction.data : instruction;
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([181, 157, 89, 67, 143, 182, 52, 72])
      ),
      0
    )
  ) {
    return MojoContractInstruction.AddLiquidity;
  }
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([156, 190, 126, 151, 163, 62, 192, 220])
      ),
      0
    )
  ) {
    return MojoContractInstruction.CreatePair;
  }
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([119, 201, 101, 45, 75, 122, 89, 3])
      ),
      0
    )
  ) {
    return MojoContractInstruction.InitializePlatform;
  }
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([232, 46, 204, 130, 181, 0, 172, 57])
      ),
      0
    )
  ) {
    return MojoContractInstruction.PausePlatform;
  }
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([80, 85, 209, 72, 24, 206, 177, 108])
      ),
      0
    )
  ) {
    return MojoContractInstruction.RemoveLiquidity;
  }
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([65, 159, 193, 22, 213, 95, 129, 28])
      ),
      0
    )
  ) {
    return MojoContractInstruction.ResumePlaform;
  }
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([248, 198, 158, 145, 225, 117, 135, 200])
      ),
      0
    )
  ) {
    return MojoContractInstruction.Swap;
  }
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([195, 241, 226, 216, 102, 1, 5, 122])
      ),
      0
    )
  ) {
    return MojoContractInstruction.UpdateFeeRate;
  }
  if (
    containsBytes(
      data,
      fixEncoderSize(getBytesEncoder(), 8).encode(
        new Uint8Array([87, 24, 138, 122, 62, 146, 186, 199])
      ),
      0
    )
  ) {
    return MojoContractInstruction.WithdrawPlatformFees;
  }
  throw new Error(
    'The provided instruction could not be identified as a mojoContract instruction.'
  );
}

export type ParsedMojoContractInstruction<
  TProgram extends string = 'AMGoaF1FYy6qijdYnLwqQmpxe7eQTVwAy2SvTQbHQcER',
> =
  | ({
      instructionType: MojoContractInstruction.AddLiquidity;
    } & ParsedAddLiquidityInstruction<TProgram>)
  | ({
      instructionType: MojoContractInstruction.CreatePair;
    } & ParsedCreatePairInstruction<TProgram>)
  | ({
      instructionType: MojoContractInstruction.InitializePlatform;
    } & ParsedInitializePlatformInstruction<TProgram>)
  | ({
      instructionType: MojoContractInstruction.PausePlatform;
    } & ParsedPausePlatformInstruction<TProgram>)
  | ({
      instructionType: MojoContractInstruction.RemoveLiquidity;
    } & ParsedRemoveLiquidityInstruction<TProgram>)
  | ({
      instructionType: MojoContractInstruction.ResumePlaform;
    } & ParsedResumePlaformInstruction<TProgram>)
  | ({
      instructionType: MojoContractInstruction.Swap;
    } & ParsedSwapInstruction<TProgram>)
  | ({
      instructionType: MojoContractInstruction.UpdateFeeRate;
    } & ParsedUpdateFeeRateInstruction<TProgram>)
  | ({
      instructionType: MojoContractInstruction.WithdrawPlatformFees;
    } & ParsedWithdrawPlatformFeesInstruction<TProgram>);
